on:
  push:
    branches-ignore:
     - 'ga-ignore-**'
  pull_request:
    branches-ignore:
     - 'ga-ignore-**'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-DOP-200-LYN-2-1-chocolatine-philemon.linossier.git"
  EXECUTABLES: "bin1,bin2"

jobs:
  check_repository_cleanliness:
    - name: Run coding style checker
    run: |
      cd .../../coding-style-checker
      coding-style . .

check_program_compilation:
  name: Checks if the program compiles correctly and executables files got created
  runs-on: ubuntu-latest
  needs: [check_repository_cleanliness]
  container: epitechcontent/epitest-docker:latest
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: make
      timeout-minutes: 2
    - run: make clean
    - name: Verifies that files are present and executable
      run: |
        echo "FAIL_TASK=false" >> "$GITHUB_ENV"
        SEARCH_BINARIES="${{ env.EXECUTABLES }}"
        IFS=$','
        for BIN in $SEARCH_BINARIES; do
            if [ ! -f "${BIN}" ]; then
                echo "::error file=${BIN},title=Binary not found::${BIN}"
                echo "FAIL_TASK=true" >> "$GITHUB_ENV"
            fi
            if [ ! -x "${BIN}" ]; then
                echo "::error file=${BIN},title=Binary not executable::${BIN}"
                echo "FAIL_TASK=true" >> "$GITHUB_ENV"
            fi
        done
    - name: Fail if needed
      if: env.FAIL_TASK == 'true'
      run: exit 1

run_tests:
  name: Run the program tests (using rule make tests_run)
  runs-on: ubuntu-latest
  needs: [check_program_compilation]
  container: epitechcontent/epitest-docker:latest
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Starts tests
      run: make tests_run
      timeout-minutes: 2

  push_to_mirror:
    name: Pushes the current repository files to a given mirror repository
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [run_tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Push mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}